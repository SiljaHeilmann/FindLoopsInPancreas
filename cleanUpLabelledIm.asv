function [Lclean] = cleanUpLabelledIm(L,imcloseThres)


% clean up L - make sure only to include biggest connected component for each index. Maybe not nesseary - but in case rearrange for loops overlap left a few pixels far from rest of loop!
L = uint16(L);
Lclean = uint16(L);
Lclean(Lclean>0)=0;
TEMPbig=L;

s = regionprops3(L,'image');

MAX= uint16(max(L(:)));
for ii = 1:uint16(max(L(:)))
ii 
MAX
    TEMPbig(TEMPbig>0)=0;
    TEMPsmall = uint16(cell2mat(s(ii,:).Image));
    if imcloseThres>0
        TEMPsmallDil = bwlabeln(imdilate(TEMPsmall,strel('cube',imcloseThres)),26);% Dilated and labelled version of image
    elseif imcloseThres==0
        TEMPsmallDil = bwlabeln(TEMPsmall,26);% only labelled (for when you want to clean up with no dilation)
    end

    BB = uint8(s(ii,:).BoundingBox);

    r = regionprops3(TEMPsmallDil,'Volume');
    [~,index] = sort(r.Volume(:));
    indexkeep = index(end);% find the largest object and keep only that
    MASK=TEMPsmallDil==indexkeep;% make mask with largest region only
    TEMPsmall(MASK==0)=0;% remove everything but the largest object
    Lclean = Lclean + uint16(TEMP).*ii;

    TEMPbig(BB(2):BB(2)+BB(5)-1,BB(1):BB(1)+BB(4)-1,BB(3):BB(3)+BB(6)-1)=TEMPsmall;


end

end